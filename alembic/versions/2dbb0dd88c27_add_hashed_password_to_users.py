"""Add hashed_password to users

Revision ID: 2dbb0dd88c27
Revises: aea6b3a8d86e
Create Date: 2025-07-17 02:26:29.464902

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2dbb0dd88c27'
down_revision: Union[str, None] = 'aea6b3a8d86e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_plaid_accounts_id'), table_name='plaid_accounts')
    op.drop_table('plaid_accounts')
    op.drop_index(op.f('ix_plaid_transactions_id'), table_name='plaid_transactions')
    op.drop_table('plaid_transactions')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plaid_transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('pending', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('plaid_transactions_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('plaid_transactions_pkey'))
    )
    op.create_index(op.f('ix_plaid_transactions_id'), 'plaid_transactions', ['id'], unique=False)
    op.create_table('plaid_accounts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('account_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subtype', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mask', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('institution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('plaid_accounts_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('plaid_accounts_pkey'))
    )
    op.create_index(op.f('ix_plaid_accounts_id'), 'plaid_accounts', ['id'], unique=False)
    # ### end Alembic commands ###
